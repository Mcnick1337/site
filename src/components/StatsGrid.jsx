// File: src/components/StatsGrid.jsx (Updated)

import React from 'react';
// ADDED: Import the new Tooltip component
import { Tooltip } from './Tooltip';
import { InformationCircleIcon } from '@heroicons/react/20/solid';

const StatCard = ({ label, value, colorClass, tooltip }) => (
    <div className="bg-white/5 backdrop-blur-md border border-white/10 rounded-2xl p-6 text-center transition-all duration-300 hover:-translate-y-1 hover:shadow-2xl hover:shadow-blue-500/20">
        <div className={`text-4xl font-bold mb-2 ${colorClass}`}>{value}</div>
        {/* UPDATED: The label is now a flex container with the tooltip icon */}
        <div className="flex items-center justify-center gap-1.5 text-sm text-gray-400 uppercase tracking-wider">
            <span>{label}</span>
            <Tooltip text={tooltip}>
                {/* We use heroicons here for a clean look. Ensure you have it installed: npm install @heroicons/react */}
                <InformationCircleIcon className="h-4 w-4 cursor-pointer text-gray-500" />
            </Tooltip>
        </div>
    </div>
);

// ADDED: Definitions for the tooltips to keep the component clean.
const tooltips = {
    winRate: "The percentage of signals that resulted in a win.",
    tradableSignals: "The total number of signals generated by this model within the selected date range.",
    profitFactor: "The ratio of gross profit to gross loss. A value greater than 1 indicates profitability. Calculated as (Total Profit / |Total Loss|).",
    sharpeRatio: "Measures the model's risk-adjusted return. A higher Sharpe Ratio indicates better performance for the amount of risk taken."
};

export const StatsGrid = ({ stats }) => {
    if (!stats || Object.keys(stats).length === 0) {
        return <div className="text-center p-8">Loading stats...</div>;
    }
    return (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 my-8">
            <StatCard label="Win Rate" value={`${stats.winRate?.toFixed(2) ?? 0}%`} colorClass="text-cyan-400" tooltip={tooltips.winRate} />
            <StatCard label="Tradable Signals" value={stats.tradableSignals ?? 0} colorClass="text-white" tooltip={tooltips.tradableSignals} />
            <StatCard label="Profit Factor" value={isFinite(stats.profitFactor) ? stats.profitFactor.toFixed(2) : 'N/A'} colorClass="text-green-400" tooltip={tooltips.profitFactor} />
            <StatCard label="Sharpe Ratio" value={stats.sharpeRatio?.toFixed(2) ?? 0} colorClass="text-amber-400" tooltip={tooltips.sharpeRatio} />
        </div>
    );
};